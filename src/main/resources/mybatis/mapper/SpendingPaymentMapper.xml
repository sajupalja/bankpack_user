<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.microservices.dao.SpendingPaymentDao">

   <!-- 나의 결제내역 전체 조회 pay_info -->
   <select id="selectSpendingPaymentAll" parameterType="Integer" resultType="com.demo.microservices.model.SpendingPaymentVO">

		select pi.pay_id
			 , pi.pay_amt
			 , pi.pay_dt
			 , pi.pay_name
			 , pi.pay_method
			 , case when pi.pay_method = 0 then '현금'
			        else ci.card_name
			   end as pay_method_name
			 , ci.card_id
			 , pi.user_id
			 , pi.process_yn
		  from pay_info pi
		  	   left outer join 
		  	   card_info ci
		  	   on pi.pay_method = ci.card_id
		 where pi.user_id = #{userId}
   </select>

   <!-- 나의 결제내역 중 한개 상세조회 pay_info -->
   <select id="selectSpendingPayment" parameterType="Integer" resultType="com.demo.microservices.model.SpendingPaymentVO">

		select pi.pay_id
			 , pi.pay_amt
			 , pi.pay_dt
			 , pi.pay_name
			 , pi.pay_method
			 , case when pi.pay_method = 0 then '현금'
			        else ci.card_name
			   end as pay_method_name
			 , ci.card_id
			 , pi.user_id
			 , pi.process_yn
		  from pay_info pi
		  	   left outer join 
		  	   card_info ci
		  	   on pi.pay_method = ci.card_id
		 where pi.pay_id = #{payId}
   </select>
   
   <!-- 결제내역 등록 -->
   <insert id="insertSpendingPayment" parameterType="com.demo.microservices.model.SpendingPaymentVO">
		
		insert into pay_info (
		<!-- pay_id는 ai라서 생략함.. -->
			pay_amt
		  , pay_dt
		  , bal_amt
		  , pay_name
		  , pay_method
		  , user_id
		  , process_yn
		  , input_id
		  , input_dt
		  , modify_id
		  , modify_dt
		)
		values (
		    #{payAmt}
		  , #{payDt}
		  , #{balAmt}
		  , #{payName}
		  , #{payMethod}
		  , #{userId}
		  , #{processYn}
		  , #{userId}
		  , now()
		  , #{userId}
		  , now()
		)
   </insert>
   
   <!-- 결제내역 수정 -->
   <update id="updateSpendingPayment" parameterType="com.demo.microservices.model.SpendingPaymentVO">
		update pay_info
		   set pay_amt 		= #{payAmt}
			 , pay_dt 		= #{payDt}
			 , bal_amt 		= #{balAmt}
			 , pay_name 	= #{payName}
			 , pay_method 	= #{payMethod}
			 , process_yn 	= #{processYn}
			 , modify_id 	= #{userId}
			 , modify_dt 	= now()
       where pay_id = #{payId}
   </update>
   
   <!-- 결제내역 삭제 -->	
   <delete id="deleteSpendingPayment" parameterType="Integer">
 delete from pay_info
       where pay_id = #{payId}
   </delete>


</mapper>